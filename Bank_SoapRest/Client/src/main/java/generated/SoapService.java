
package generated;

import java.math.BigInteger;
import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.7-b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SoapService", targetNamespace = "http://soapservice/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SoapService {


    /**
     * 
     * @param credentials
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "register", targetNamespace = "http://soapservice/", className = "generated.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://soapservice/", className = "generated.RegisterResponse")
    @Action(input = "http://soapservice/SoapService/registerRequest", output = "http://soapservice/SoapService/registerResponse")
    public boolean register(
        @WebParam(name = "credentials", targetNamespace = "")
        User credentials);

    /**
     * 
     * @param amount
     * @param credentials
     * @param name
     * @param targetAccount
     * @param title
     * @param account
     * @return
     *     returns generated.Account
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "makeTransfer", targetNamespace = "http://soapservice/", className = "generated.MakeTransfer")
    @ResponseWrapper(localName = "makeTransferResponse", targetNamespace = "http://soapservice/", className = "generated.MakeTransferResponse")
    @Action(input = "http://soapservice/SoapService/makeTransferRequest", output = "http://soapservice/SoapService/makeTransferResponse")
    public Account makeTransfer(
        @WebParam(name = "credentials", targetNamespace = "")
        User credentials,
        @WebParam(name = "account", targetNamespace = "")
        Account account,
        @WebParam(name = "targetAccount", targetNamespace = "")
        String targetAccount,
        @WebParam(name = "amount", targetNamespace = "")
        BigInteger amount,
        @WebParam(name = "title", targetNamespace = "")
        String title,
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param credentials
     * @return
     *     returns java.util.List<generated.Account>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAccounts", targetNamespace = "http://soapservice/", className = "generated.GetAccounts")
    @ResponseWrapper(localName = "getAccountsResponse", targetNamespace = "http://soapservice/", className = "generated.GetAccountsResponse")
    @Action(input = "http://soapservice/SoapService/getAccountsRequest", output = "http://soapservice/SoapService/getAccountsResponse")
    public List<Account> getAccounts(
        @WebParam(name = "credentials", targetNamespace = "")
        User credentials);

    /**
     * 
     * @param credentials
     * @param account
     * @return
     *     returns java.util.List<generated.Transfer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHistory", targetNamespace = "http://soapservice/", className = "generated.GetHistory")
    @ResponseWrapper(localName = "getHistoryResponse", targetNamespace = "http://soapservice/", className = "generated.GetHistoryResponse")
    @Action(input = "http://soapservice/SoapService/getHistoryRequest", output = "http://soapservice/SoapService/getHistoryResponse")
    public List<Transfer> getHistory(
        @WebParam(name = "credentials", targetNamespace = "")
        User credentials,
        @WebParam(name = "account", targetNamespace = "")
        Account account);

    /**
     * 
     * @param credentials
     * @return
     *     returns generated.Account
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createAccount", targetNamespace = "http://soapservice/", className = "generated.CreateAccount")
    @ResponseWrapper(localName = "createAccountResponse", targetNamespace = "http://soapservice/", className = "generated.CreateAccountResponse")
    @Action(input = "http://soapservice/SoapService/createAccountRequest", output = "http://soapservice/SoapService/createAccountResponse")
    public Account createAccount(
        @WebParam(name = "credentials", targetNamespace = "")
        User credentials);

    /**
     * 
     * @param amount
     * @param credentials
     * @param account
     * @return
     *     returns generated.Account
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "withdraw", targetNamespace = "http://soapservice/", className = "generated.Withdraw")
    @ResponseWrapper(localName = "withdrawResponse", targetNamespace = "http://soapservice/", className = "generated.WithdrawResponse")
    @Action(input = "http://soapservice/SoapService/withdrawRequest", output = "http://soapservice/SoapService/withdrawResponse")
    public Account withdraw(
        @WebParam(name = "credentials", targetNamespace = "")
        User credentials,
        @WebParam(name = "account", targetNamespace = "")
        Account account,
        @WebParam(name = "amount", targetNamespace = "")
        BigInteger amount);

    /**
     * 
     * @param amount
     * @param credentials
     * @param account
     * @return
     *     returns generated.Account
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deposit", targetNamespace = "http://soapservice/", className = "generated.Deposit")
    @ResponseWrapper(localName = "depositResponse", targetNamespace = "http://soapservice/", className = "generated.DepositResponse")
    @Action(input = "http://soapservice/SoapService/depositRequest", output = "http://soapservice/SoapService/depositResponse")
    public Account deposit(
        @WebParam(name = "credentials", targetNamespace = "")
        User credentials,
        @WebParam(name = "account", targetNamespace = "")
        Account account,
        @WebParam(name = "amount", targetNamespace = "")
        BigInteger amount);

    /**
     * 
     * @param credentials
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://soapservice/", className = "generated.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://soapservice/", className = "generated.LoginResponse")
    @Action(input = "http://soapservice/SoapService/loginRequest", output = "http://soapservice/SoapService/loginResponse")
    public boolean login(
        @WebParam(name = "credentials", targetNamespace = "")
        User credentials);

}
